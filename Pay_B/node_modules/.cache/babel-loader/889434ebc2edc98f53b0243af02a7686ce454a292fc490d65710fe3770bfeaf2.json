{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { roleList, roleSave, roleDelete, rolePwd, RoleRightTree, RoleRightSave } from '@/api/userMG';\nimport Pagination from '@/components/Pagination';\nexport default {\n  data() {\n    return {\n      nshow: true,\n      //switch开启\n      fshow: false,\n      //switch关闭\n      loading: false,\n      //是显示加载\n      editFormVisible: false,\n      //控制编辑页面显示与隐藏\n      menuAccessshow: false,\n      //控制数据权限显示与隐藏\n      title: '添加',\n      editForm: {\n        roleId: '',\n        systemNo: '',\n        roleNo: '',\n        roleName: '',\n        token: localStorage.getItem('logintoken')\n      },\n      // rules 表单验证\n      rules: {\n        systemNo: [{\n          required: true,\n          message: '请输入系统编码',\n          trigger: 'blur'\n        }],\n        roleNo: [{\n          required: true,\n          message: '请输入角色代码',\n          trigger: 'blur'\n        }],\n        roleName: [{\n          required: true,\n          message: '请输入角色名称',\n          trigger: 'blur'\n        }]\n      },\n      formInline: {\n        page: 1,\n        limit: 10,\n        varLable: '',\n        varName: '',\n        token: localStorage.getItem('logintoken')\n      },\n      // 删除\n      seletedata: {\n        ids: '',\n        token: localStorage.getItem('logintoken')\n      },\n      userparm: [],\n      //搜索权限\n      listData: [],\n      //用户数据\n      // 数据权限\n      RoleRight: [],\n      RoleRightProps: {\n        children: 'children',\n        label: 'name'\n      },\n      // 选中\n      checkmenu: [],\n      //参数role\n      saveroleId: '',\n      // 分页参数\n      pageparm: {\n        currentPage: 1,\n        pageSize: 10,\n        total: 10\n      }\n    };\n  },\n  // 注册组件\n  components: {\n    Pagination\n  },\n  /**\r\n   * 数据发生改变\r\n   */\n\n  watch: {},\n  /**\r\n   * 创建完毕\r\n   */\n\n  created() {\n    this.getdata(this.formInline);\n  },\n  /**\r\n   * 里面的方法只有被调用才会执行\r\n   */\n\n  methods: {\n    // 获取角色列表\n    getdata(parameter) {\n      // 模拟数据\n      let res = {\n        code: 0,\n        msg: null,\n        count: 6,\n        data: [{\n          addUser: 'root',\n          editUser: 'root',\n          addTime: 1519182004000,\n          editTime: 1520288426000,\n          roleId: 1,\n          systemNo: 'pmd',\n          roleNo: 'Administrator',\n          roleName: '超级管理员'\n        }, {\n          addUser: null,\n          editUser: null,\n          addTime: 1521111376000,\n          editTime: 1520678191000,\n          roleId: 2,\n          systemNo: 'order',\n          roleNo: 'admin',\n          roleName: '公司管理员'\n        }, {\n          addUser: null,\n          editUser: null,\n          addTime: 1520678221000,\n          editTime: 1520678221000,\n          roleId: 95,\n          systemNo: 'pm',\n          roleNo: 'common',\n          roleName: '普通用户'\n        }, {\n          addUser: null,\n          editUser: null,\n          addTime: 1526349853000,\n          editTime: 1526349853000,\n          roleId: 96,\n          systemNo: '1',\n          roleNo: '1',\n          roleName: '1'\n        }, {\n          addUser: null,\n          editUser: null,\n          addTime: 1526349942000,\n          editTime: 1526437443000,\n          roleId: 97,\n          systemNo: '2',\n          roleNo: '2',\n          roleName: '2'\n        }, {\n          addUser: null,\n          editUser: null,\n          addTime: 1526652148000,\n          editTime: 1526652148000,\n          roleId: 101,\n          systemNo: 'test',\n          roleNo: 'demo',\n          roleName: '演示角色'\n        }]\n      };\n      this.loading = false;\n      this.listData = res.data;\n      // 分页赋值\n      this.pageparm.currentPage = this.formInline.page;\n      this.pageparm.pageSize = this.formInline.limit;\n      this.pageparm.total = res.count;\n      // 模拟数据结束\n\n      /***\r\n       * 调用接口，注释上面模拟数据 取消下面注释\r\n       */\n      // roleList(parameter)\n      //   .then(res => {\n      //     this.loading = false\n      //     if (res.success == false) {\n      //       this.$message({\n      //         type: 'info',\n      //         message: res.msg\n      //       })\n      //     } else {\n      //       this.listData = res.data\n      //       // 分页赋值\n      //       this.pageparm.currentPage = this.formInline.page\n      //       this.pageparm.pageSize = this.formInline.limit\n      //       this.pageparm.total = res.count\n      //     }\n      //   })\n      //   .catch(err => {\n      //     this.loading = false\n      //     this.$message.error('获取角色列表失败，请稍后再试！')\n      //   })\n    },\n\n    // 分页插件事件\n    callFather(parm) {\n      this.formInline.page = parm.currentPage;\n      this.formInline.limit = parm.pageSize;\n      this.getdata(this.formInline);\n    },\n    // 搜索事件\n    search() {\n      this.getdata(this.formInline);\n    },\n    //显示编辑界面\n    handleEdit: function (index, row) {\n      this.editFormVisible = true;\n      if (row != undefined && row != 'undefined') {\n        this.title = '修改';\n        this.editForm.roleId = row.roleId;\n        this.editForm.systemNo = row.systemNo;\n        this.editForm.roleNo = row.roleNo;\n        this.editForm.roleName = row.roleName;\n      } else {\n        this.title = '添加';\n        this.editForm.roleId = '';\n        this.editForm.systemNo = '';\n        this.editForm.roleNo = '';\n        this.editForm.roleName = '';\n      }\n    },\n    // 编辑、增加页面保存方法\n    submitForm(editData) {\n      this.$refs[editData].validate(valid => {\n        if (valid) {\n          roleSave(this.editForm).then(res => {\n            this.editFormVisible = false;\n            this.loading = false;\n            if (res.success) {\n              this.getdata(this.formInline);\n              this.$message({\n                type: 'success',\n                message: '角色保存成功！'\n              });\n            } else {\n              this.$message({\n                type: 'info',\n                message: res.msg\n              });\n            }\n          }).catch(err => {\n            this.editFormVisible = false;\n            this.loading = false;\n            this.$message.error('角色保存失败，请稍后再试！');\n          });\n        } else {\n          return false;\n        }\n      });\n    },\n    // 删除角色\n    deleteUser(index, row) {\n      this.$confirm('确定要删除吗?', '信息', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(() => {\n        roleDelete(row.roleId).then(res => {\n          if (res.success) {\n            this.$message({\n              type: 'success',\n              message: '角色已删除！'\n            });\n            this.getdata(this.formInline);\n          } else {\n            this.$message({\n              type: 'info',\n              message: res.msg\n            });\n          }\n        }).catch(err => {\n          this.loading = false;\n          this.$message.error('角色删除失败，请稍后再试！');\n        });\n      }).catch(() => {\n        this.$message({\n          type: 'info',\n          message: '已取消删除'\n        });\n      });\n    },\n    // 数据权限\n    menuAccess: function (index, row) {\n      this.menuAccessshow = true;\n      this.saveroleId = row.roleId;\n      RoleRightTree(row.roleId).then(res => {\n        if (res.data.success) {\n          this.$message({\n            type: 'success',\n            message: '获取权限成功'\n          });\n          this.changemenu(res.data.data);\n          this.RoleRight = this.changeArr(res.data.data);\n        } else {\n          this.$message({\n            type: 'info',\n            message: res.data.msg\n          });\n        }\n      }).catch(err => {\n        this.loading = false;\n        this.$message.error('获取权限失败，请稍后再试！');\n      });\n    },\n    // 选中菜单\n    changemenu(arr) {\n      let change = [];\n      for (let i = 0; i < arr.length; i++) {\n        if (arr[i].checked) {\n          change.push(arr[i].id);\n        }\n      }\n      this.checkmenu = change;\n    },\n    // tree 递归\n    changeArr(list) {\n      var temptree = [],\n        tree = [],\n        items = [];\n      for (var i in list) {\n        if (!temptree[list[i].id]) {\n          var trow = {\n            id: list[i].id,\n            pId: list[i].pId,\n            name: list[i].name,\n            open: list[i].open,\n            checked: list[i].checked,\n            children: []\n          };\n          temptree[list[i].id] = trow;\n          items.push(trow);\n        }\n        if (list[i].uid > 0) {\n          temptree[list[i].id]['children'].push({\n            id: list[i].id,\n            pId: list[i].pId,\n            name: list[i].name,\n            open: list[i].open,\n            checked: list[i].checked,\n            children: []\n          });\n        }\n      }\n      for (var j in items) {\n        if (temptree[items[j].pId]) {\n          temptree[items[j].pId]['children'].push(temptree[items[j].id]);\n        } else {\n          tree.push(temptree[items[j].id]);\n        }\n      }\n      temptree = null;\n      items = null;\n      return tree;\n    },\n    // 菜单权限-保存\n    menuPermSave() {\n      let parm = {\n        roleId: this.saveroleId,\n        moduleIds: ''\n      };\n      let node = this.$refs.tree.getCheckedNodes();\n      let moduleIds = [];\n      if (node.length != 0) {\n        for (let i = 0; i < node.length; i++) {\n          moduleIds.push(node[i].id);\n        }\n        parm.moduleIds = JSON.stringify(moduleIds);\n      }\n      RoleRightSave(parm).then(res => {\n        if (res.success) {\n          this.$message({\n            type: 'success',\n            message: '权限保存成功'\n          });\n          this.menuAccessshow = false;\n          this.getdata(this.formInline);\n        } else {\n          this.$message({\n            type: 'info',\n            message: res.msg\n          });\n        }\n      }).catch(err => {\n        this.loading = false;\n        this.$message.error('权限保存失败，请稍后再试！');\n      });\n    },\n    // 关闭编辑、增加弹出框\n    closeDialog(dialog) {\n      if (dialog == 'edit') {\n        this.editFormVisible = false;\n      } else if (dialog == 'perm') {\n        this.menuAccessshow = false;\n      }\n    }\n  }\n};","map":{"version":3,"names":["roleList","roleSave","roleDelete","rolePwd","RoleRightTree","RoleRightSave","Pagination","data","nshow","fshow","loading","editFormVisible","menuAccessshow","title","editForm","roleId","systemNo","roleNo","roleName","token","localStorage","getItem","rules","required","message","trigger","formInline","page","limit","varLable","varName","seletedata","ids","userparm","listData","RoleRight","RoleRightProps","children","label","checkmenu","saveroleId","pageparm","currentPage","pageSize","total","components","watch","created","getdata","methods","parameter","res","code","msg","count","addUser","editUser","addTime","editTime","callFather","parm","search","handleEdit","index","row","undefined","submitForm","editData","$refs","validate","valid","then","success","$message","type","catch","err","error","deleteUser","$confirm","confirmButtonText","cancelButtonText","menuAccess","changemenu","changeArr","arr","change","i","length","checked","push","id","list","temptree","tree","items","trow","pId","name","open","uid","j","menuPermSave","moduleIds","node","getCheckedNodes","JSON","stringify","closeDialog","dialog"],"sources":["src/views/hotelviews/system/Role.vue"],"sourcesContent":["/**\r\n * 系统管理  角色管理\r\n */\r\n<template>\r\n  <div>\r\n    <!-- 面包屑导航 -->\r\n    <el-breadcrumb separator-class=\"el-icon-arrow-right\">\r\n      <el-breadcrumb-item :to=\"{ path: '/' }\">首页</el-breadcrumb-item>\r\n      <el-breadcrumb-item>角色管理</el-breadcrumb-item>\r\n    </el-breadcrumb>\r\n    <!-- 搜索筛选 -->\r\n    <el-form :inline=\"true\" :model=\"formInline\" class=\"user-search\">\r\n\r\n      <el-form-item label=\"搜索：\">\r\n        <el-input size=\"small\" v-model=\"formInline.roleName\" placeholder=\"输入角色名称\"></el-input>\r\n      </el-form-item>\r\n      <el-form-item label=\"\">\r\n        <el-input size=\"small\" v-model=\"formInline.roleNo\" placeholder=\"输入角色代码\"></el-input>\r\n      </el-form-item>\r\n      <el-form-item>\r\n        <el-button size=\"small\" type=\"primary\" icon=\"el-icon-search\" @click=\"search\">搜索</el-button>\r\n        <el-button size=\"small\" type=\"primary\" icon=\"el-icon-plus\" @click=\"handleEdit()\">添加</el-button>\r\n      </el-form-item>\r\n    </el-form>\r\n    <!--列表-->\r\n    <el-table size=\"small\" :data=\"listData\" highlight-current-row v-loading=\"loading\" border element-loading-text=\"拼命加载中\" style=\"width: 100%;\">\r\n      <el-table-column align=\"center\" type=\"selection\" width=\"60\">\r\n      </el-table-column>\r\n      <el-table-column sortable prop=\"roleName\" label=\"角色名称\" width=\"300\">\r\n      </el-table-column>\r\n      <el-table-column sortable prop=\"roleNo\" label=\"角色代码\" width=\"300\">\r\n      </el-table-column>\r\n      <el-table-column sortable prop=\"editTime\" label=\"修改时间\" width=\"300\">\r\n        <template slot-scope=\"scope\">\r\n          <div>{{scope.row.editTime|timestampToTime}}</div>\r\n        </template>\r\n      </el-table-column>\r\n      <el-table-column sortable prop=\"editUser\" label=\"修改人\" width=\"300\">\r\n      </el-table-column>\r\n      <el-table-column align=\"center\" label=\"操作\" min-width=\"300\">\r\n        <template slot-scope=\"scope\">\r\n          <el-button size=\"mini\" @click=\"handleEdit(scope.$index, scope.row)\">编辑</el-button>\r\n          <el-button size=\"mini\" type=\"danger\" @click=\"deleteUser(scope.$index, scope.row)\">删除</el-button>\r\n          <el-button size=\"mini\" type=\"success\" @click=\"menuAccess(scope.$index, scope.row)\">菜单权限</el-button>\r\n        </template>\r\n      </el-table-column>\r\n    </el-table>\r\n    <!-- 分页组件 -->\r\n    <Pagination v-bind:child-msg=\"pageparm\" @callFather=\"callFather\"></Pagination>\r\n    <!-- 编辑界面 -->\r\n    <el-dialog :title=\"title\" :visible.sync=\"editFormVisible\" width=\"30%\" @click='closeDialog(\"edit\")'>\r\n      <el-form label-width=\"120px\" :model=\"editForm\" ref=\"editForm\" :rules=\"rules\">\r\n        <el-form-item label=\"系统编码\" prop=\"systemNo\">\r\n          <el-input size=\"small\" v-model=\"editForm.systemNo\" auto-complete=\"off\" placeholder=\"请输入系统编码\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"角色名称\" prop=\"roleName\">\r\n          <el-input size=\"small\" v-model=\"editForm.roleName\" auto-complete=\"off\" placeholder=\"请输入角色名称\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"角色代码\" prop=\"roleNo\">\r\n          <el-input size=\"small\" v-model=\"editForm.roleNo\" auto-complete=\"off\" placeholder=\"请输入角色代码\"></el-input>\r\n        </el-form-item>\r\n      </el-form>\r\n      <div slot=\"footer\" class=\"dialog-footer\">\r\n        <el-button size=\"small\" @click='closeDialog(\"edit\")'>取消</el-button>\r\n        <el-button size=\"small\" type=\"primary\" :loading=\"loading\" class=\"title\" @click=\"submitForm('editForm')\">保存</el-button>\r\n      </div>\r\n    </el-dialog>\r\n    <!-- 菜单权限 -->\r\n    <el-dialog title=\"菜单权限\" :visible.sync=\"menuAccessshow\" width=\"30%\" @click='closeDialog(\"perm\")'>\r\n      <el-tree ref=\"tree\" default-expand-all=\"\" :data=\"RoleRight\" :props=\"RoleRightProps\" :default-checked-keys=\"checkmenu\" node-key=\"id\" show-checkbox>\r\n      </el-tree>\r\n      <div slot=\"footer\" class=\"dialog-footer\">\r\n        <el-button size=\"small\" @click='closeDialog(\"perm\")'>取消</el-button>\r\n        <el-button size=\"small\" type=\"primary\" :loading=\"loading\" class=\"title\" @click=\"menuPermSave\">保存</el-button>\r\n      </div>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport {\r\n  roleList,\r\n  roleSave,\r\n  roleDelete,\r\n  rolePwd,\r\n  RoleRightTree,\r\n  RoleRightSave\r\n} from '@/api/userMG'\r\nimport Pagination from '@/components/Pagination'\r\nexport default {\r\n  data() {\r\n    return {\r\n      nshow: true, //switch开启\r\n      fshow: false, //switch关闭\r\n      loading: false, //是显示加载\r\n      editFormVisible: false, //控制编辑页面显示与隐藏\r\n      menuAccessshow: false, //控制数据权限显示与隐藏\r\n      title: '添加',\r\n      editForm: {\r\n        roleId: '',\r\n        systemNo: '',\r\n        roleNo: '',\r\n        roleName: '',\r\n        token: localStorage.getItem('logintoken')\r\n      },\r\n      // rules 表单验证\r\n      rules: {\r\n        systemNo: [\r\n          { required: true, message: '请输入系统编码', trigger: 'blur' }\r\n        ],\r\n        roleNo: [\r\n          { required: true, message: '请输入角色代码', trigger: 'blur' }\r\n        ],\r\n        roleName: [\r\n          { required: true, message: '请输入角色名称', trigger: 'blur' }\r\n        ]\r\n      },\r\n      formInline: {\r\n        page: 1,\r\n        limit: 10,\r\n        varLable: '',\r\n        varName: '',\r\n        token: localStorage.getItem('logintoken')\r\n      },\r\n      // 删除\r\n      seletedata: {\r\n        ids: '',\r\n        token: localStorage.getItem('logintoken')\r\n      },\r\n      userparm: [], //搜索权限\r\n      listData: [], //用户数据\r\n      // 数据权限\r\n      RoleRight: [],\r\n      RoleRightProps: {\r\n        children: 'children',\r\n        label: 'name'\r\n      },\r\n      // 选中\r\n      checkmenu: [],\r\n      //参数role\r\n      saveroleId: '',\r\n      // 分页参数\r\n      pageparm: {\r\n        currentPage: 1,\r\n        pageSize: 10,\r\n        total: 10\r\n      }\r\n    }\r\n  },\r\n  // 注册组件\r\n  components: {\r\n    Pagination\r\n  },\r\n  /**\r\n   * 数据发生改变\r\n   */\r\n\r\n  watch: {},\r\n\r\n  /**\r\n   * 创建完毕\r\n   */\r\n\r\n  created() {\r\n    this.getdata(this.formInline)\r\n  },\r\n\r\n  /**\r\n   * 里面的方法只有被调用才会执行\r\n   */\r\n\r\n  methods: {\r\n    // 获取角色列表\r\n    getdata(parameter) {\r\n      // 模拟数据\r\n      let res = {\r\n        code: 0,\r\n        msg: null,\r\n        count: 6,\r\n        data: [\r\n          {\r\n            addUser: 'root',\r\n            editUser: 'root',\r\n            addTime: 1519182004000,\r\n            editTime: 1520288426000,\r\n            roleId: 1,\r\n            systemNo: 'pmd',\r\n            roleNo: 'Administrator',\r\n            roleName: '超级管理员'\r\n          },\r\n          {\r\n            addUser: null,\r\n            editUser: null,\r\n            addTime: 1521111376000,\r\n            editTime: 1520678191000,\r\n            roleId: 2,\r\n            systemNo: 'order',\r\n            roleNo: 'admin',\r\n            roleName: '公司管理员'\r\n          },\r\n          {\r\n            addUser: null,\r\n            editUser: null,\r\n            addTime: 1520678221000,\r\n            editTime: 1520678221000,\r\n            roleId: 95,\r\n            systemNo: 'pm',\r\n            roleNo: 'common',\r\n            roleName: '普通用户'\r\n          },\r\n          {\r\n            addUser: null,\r\n            editUser: null,\r\n            addTime: 1526349853000,\r\n            editTime: 1526349853000,\r\n            roleId: 96,\r\n            systemNo: '1',\r\n            roleNo: '1',\r\n            roleName: '1'\r\n          },\r\n          {\r\n            addUser: null,\r\n            editUser: null,\r\n            addTime: 1526349942000,\r\n            editTime: 1526437443000,\r\n            roleId: 97,\r\n            systemNo: '2',\r\n            roleNo: '2',\r\n            roleName: '2'\r\n          },\r\n          {\r\n            addUser: null,\r\n            editUser: null,\r\n            addTime: 1526652148000,\r\n            editTime: 1526652148000,\r\n            roleId: 101,\r\n            systemNo: 'test',\r\n            roleNo: 'demo',\r\n            roleName: '演示角色'\r\n          }\r\n        ]\r\n      }\r\n      this.loading = false\r\n      this.listData = res.data\r\n      // 分页赋值\r\n      this.pageparm.currentPage = this.formInline.page\r\n      this.pageparm.pageSize = this.formInline.limit\r\n      this.pageparm.total = res.count\r\n      // 模拟数据结束\r\n\r\n      /***\r\n       * 调用接口，注释上面模拟数据 取消下面注释\r\n       */\r\n      // roleList(parameter)\r\n      //   .then(res => {\r\n      //     this.loading = false\r\n      //     if (res.success == false) {\r\n      //       this.$message({\r\n      //         type: 'info',\r\n      //         message: res.msg\r\n      //       })\r\n      //     } else {\r\n      //       this.listData = res.data\r\n      //       // 分页赋值\r\n      //       this.pageparm.currentPage = this.formInline.page\r\n      //       this.pageparm.pageSize = this.formInline.limit\r\n      //       this.pageparm.total = res.count\r\n      //     }\r\n      //   })\r\n      //   .catch(err => {\r\n      //     this.loading = false\r\n      //     this.$message.error('获取角色列表失败，请稍后再试！')\r\n      //   })\r\n    },\r\n    // 分页插件事件\r\n    callFather(parm) {\r\n      this.formInline.page = parm.currentPage\r\n      this.formInline.limit = parm.pageSize\r\n      this.getdata(this.formInline)\r\n    },\r\n    // 搜索事件\r\n    search() {\r\n      this.getdata(this.formInline)\r\n    },\r\n    //显示编辑界面\r\n    handleEdit: function(index, row) {\r\n      this.editFormVisible = true\r\n      if (row != undefined && row != 'undefined') {\r\n        this.title = '修改'\r\n        this.editForm.roleId = row.roleId\r\n        this.editForm.systemNo = row.systemNo\r\n        this.editForm.roleNo = row.roleNo\r\n        this.editForm.roleName = row.roleName\r\n      } else {\r\n        this.title = '添加'\r\n        this.editForm.roleId = ''\r\n        this.editForm.systemNo = ''\r\n        this.editForm.roleNo = ''\r\n        this.editForm.roleName = ''\r\n      }\r\n    },\r\n    // 编辑、增加页面保存方法\r\n    submitForm(editData) {\r\n      this.$refs[editData].validate(valid => {\r\n        if (valid) {\r\n          roleSave(this.editForm)\r\n            .then(res => {\r\n              this.editFormVisible = false\r\n              this.loading = false\r\n              if (res.success) {\r\n                this.getdata(this.formInline)\r\n                this.$message({\r\n                  type: 'success',\r\n                  message: '角色保存成功！'\r\n                })\r\n              } else {\r\n                this.$message({\r\n                  type: 'info',\r\n                  message: res.msg\r\n                })\r\n              }\r\n            })\r\n            .catch(err => {\r\n              this.editFormVisible = false\r\n              this.loading = false\r\n              this.$message.error('角色保存失败，请稍后再试！')\r\n            })\r\n        } else {\r\n          return false\r\n        }\r\n      })\r\n    },\r\n    // 删除角色\r\n    deleteUser(index, row) {\r\n      this.$confirm('确定要删除吗?', '信息', {\r\n        confirmButtonText: '确定',\r\n        cancelButtonText: '取消',\r\n        type: 'warning'\r\n      })\r\n        .then(() => {\r\n          roleDelete(row.roleId)\r\n            .then(res => {\r\n              if (res.success) {\r\n                this.$message({\r\n                  type: 'success',\r\n                  message: '角色已删除！'\r\n                })\r\n                this.getdata(this.formInline)\r\n              } else {\r\n                this.$message({\r\n                  type: 'info',\r\n                  message: res.msg\r\n                })\r\n              }\r\n            })\r\n            .catch(err => {\r\n              this.loading = false\r\n              this.$message.error('角色删除失败，请稍后再试！')\r\n            })\r\n        })\r\n        .catch(() => {\r\n          this.$message({\r\n            type: 'info',\r\n            message: '已取消删除'\r\n          })\r\n        })\r\n    },\r\n    // 数据权限\r\n    menuAccess: function(index, row) {\r\n      this.menuAccessshow = true\r\n      this.saveroleId = row.roleId\r\n      RoleRightTree(row.roleId)\r\n        .then(res => {\r\n          if (res.data.success) {\r\n            this.$message({\r\n              type: 'success',\r\n              message: '获取权限成功'\r\n            })\r\n            this.changemenu(res.data.data)\r\n            this.RoleRight = this.changeArr(res.data.data)\r\n          } else {\r\n            this.$message({\r\n              type: 'info',\r\n              message: res.data.msg\r\n            })\r\n          }\r\n        })\r\n        .catch(err => {\r\n          this.loading = false\r\n          this.$message.error('获取权限失败，请稍后再试！')\r\n        })\r\n    },\r\n    // 选中菜单\r\n    changemenu(arr) {\r\n      let change = []\r\n      for (let i = 0; i < arr.length; i++) {\r\n        if (arr[i].checked) {\r\n          change.push(arr[i].id)\r\n        }\r\n      }\r\n      this.checkmenu = change\r\n    },\r\n    // tree 递归\r\n    changeArr(list) {\r\n      var temptree = [],\r\n        tree = [],\r\n        items = []\r\n      for (var i in list) {\r\n        if (!temptree[list[i].id]) {\r\n          var trow = {\r\n            id: list[i].id,\r\n            pId: list[i].pId,\r\n            name: list[i].name,\r\n            open: list[i].open,\r\n            checked: list[i].checked,\r\n            children: []\r\n          }\r\n          temptree[list[i].id] = trow\r\n          items.push(trow)\r\n        }\r\n        if (list[i].uid > 0) {\r\n          temptree[list[i].id]['children'].push({\r\n            id: list[i].id,\r\n            pId: list[i].pId,\r\n            name: list[i].name,\r\n            open: list[i].open,\r\n            checked: list[i].checked,\r\n            children: []\r\n          })\r\n        }\r\n      }\r\n\r\n      for (var j in items) {\r\n        if (temptree[items[j].pId]) {\r\n          temptree[items[j].pId]['children'].push(temptree[items[j].id])\r\n        } else {\r\n          tree.push(temptree[items[j].id])\r\n        }\r\n      }\r\n      temptree = null\r\n      items = null\r\n      return tree\r\n    },\r\n    // 菜单权限-保存\r\n    menuPermSave() {\r\n      let parm = {\r\n        roleId: this.saveroleId,\r\n        moduleIds: ''\r\n      }\r\n      let node = this.$refs.tree.getCheckedNodes()\r\n      let moduleIds = []\r\n      if (node.length != 0) {\r\n        for (let i = 0; i < node.length; i++) {\r\n          moduleIds.push(node[i].id)\r\n        }\r\n        parm.moduleIds = JSON.stringify(moduleIds)\r\n      }\r\n      RoleRightSave(parm)\r\n        .then(res => {\r\n          if (res.success) {\r\n            this.$message({\r\n              type: 'success',\r\n              message: '权限保存成功'\r\n            })\r\n            this.menuAccessshow = false\r\n            this.getdata(this.formInline)\r\n          } else {\r\n            this.$message({\r\n              type: 'info',\r\n              message: res.msg\r\n            })\r\n          }\r\n        })\r\n        .catch(err => {\r\n          this.loading = false\r\n          this.$message.error('权限保存失败，请稍后再试！')\r\n        })\r\n    },\r\n    // 关闭编辑、增加弹出框\r\n    closeDialog(dialog) {\r\n      if (dialog == 'edit') {\r\n        this.editFormVisible = false\r\n      } else if (dialog == 'perm') {\r\n        this.menuAccessshow = false\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.user-search {\r\n  margin-top: 20px;\r\n}\r\n.userRole {\r\n  width: 100%;\r\n}\r\n</style>\r\n\r\n "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}