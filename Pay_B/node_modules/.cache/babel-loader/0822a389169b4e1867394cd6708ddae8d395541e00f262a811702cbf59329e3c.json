{"ast":null,"code":"import axios from \"axios\";\nimport { Message } from \"element-ui\";\nexport default {\n  data() {\n    return {\n      registerForm: {\n        name: '',\n        key1: '',\n        key2: '',\n        type: 'system'\n      },\n      options: [{\n        value: 'system',\n        label: '系统管理员'\n      }, {\n        value: 'book',\n        label: '在线预定管理员'\n      }, {\n        value: 'check',\n        label: '审核员'\n      }],\n      value: '系统管理员'\n    };\n  },\n  methods: {\n    validateRegisterForm() {\n      if (!this.registerForm.name || !this.registerForm.key1 || !this.registerForm.key2) {\n        this.$message.error('请输入完整注册信息！');\n        return;\n      }\n      if (this.registerForm.key1 !== this.registerForm.key2) {\n        this.$message.error('两次输入的密码不一致，请重新输入！');\n        return;\n      }\n      axios.defaults.baseURL = 'http://localhost:80';\n      axios.post('/admin/register', {\n        \"name\": this.registerForm.name,\n        \"key1\": this.registerForm.key1,\n        \"key2\": this.registerForm.key2,\n        \"type\": this.registerForm.type\n      }, {\n        headers: {\n          'Access-Control-Allow-Origin': '*',\n          //解决cors头问题\n          'Access-Control-Allow-Credentials': 'true' //解决session问题\n          // 'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8', //将表单数据传递转化为form-data类型\n          //  'token': '131231',\n        }\n      }).then(response => {\n        //console.log('/login',response.data)\n        //const {code,msg,data}=response;\n\n        if (String(response.data.code) === \"1\") {\n          //console.log(\"123\");\n\n          //this.$message.success(\"963963\");\n          //Message.success(response.data.msg);\n\n          this.$message.success(response.data.msg);\n          this.$refs.registerFormRef.resetFields();\n        } else {\n          // Message.error(msg);\n          this.$message.error(response.data.msg);\n        }\n      }, error => {\n        console.log('错误', error.message);\n      });\n\n      //const {name, key1,type} = this.registerForm;\n    },\n\n    resetRegisterForm() {\n      this.$refs.registerFormRef.resetFields();\n    }\n  }\n};","map":{"version":3,"names":["axios","Message","data","registerForm","name","key1","key2","type","options","value","label","methods","validateRegisterForm","$message","error","defaults","baseURL","post","headers","then","response","String","code","success","msg","$refs","registerFormRef","resetFields","console","log","message","resetRegisterForm"],"sources":["src/views/manager_views/manager/register.vue"],"sourcesContent":["<template>\r\n    <div class=\"register_container\">\r\n        <el-breadcrumb separator=\"/\" class=\"mianbaoxie\">\r\n            <el-breadcrumb-item :to=\"{ path: '/system' }\">首页</el-breadcrumb-item>\r\n            <el-breadcrumb-item>管理员注册</el-breadcrumb-item>\r\n        </el-breadcrumb>\r\n        <div class=\"register_box\">\r\n            <div class=\"register_title\">\r\n                管理员注册\r\n            </div>\r\n            <el-form\r\n                ref=\"registerFormRef\"\r\n                :model=\"registerForm\"\r\n                label-width=\"0px\"\r\n                class=\"register_form\">\r\n                <el-form-item prop=\"name\">\r\n                    <el-input\r\n                        v-model=\"registerForm.name\"\r\n                        prefix-icon=\"\"\r\n                        placeholder=\"请输入用户名\">\r\n                    </el-input>\r\n                </el-form-item>\r\n                <el-form-item prop=\"key1\">\r\n                    <el-input\r\n                        v-model=\"registerForm.key1\"\r\n                        prefix-icon=\"\"\r\n                        type=\"password\"\r\n                        placeholder=\"请输入密码\">\r\n                    </el-input>\r\n                </el-form-item>\r\n                <el-form-item prop=\"key2\">\r\n                    <el-input\r\n                        v-model=\"registerForm.key2\"\r\n                        prefix-icon=\"\"\r\n                        type=\"password\"\r\n                        placeholder=\"请再次输入密码\">\r\n                    </el-input>\r\n                </el-form-item>\r\n                <el-select v-model=\"registerForm.type\" placeholder=\"请选择\">\r\n                    <el-option\r\n                        v-for=\"item in options\"\r\n                        :key=\"item.value\"\r\n                        :label=\"item.label\"\r\n                        :value=\"item.value\">\r\n                    </el-option>\r\n                </el-select>\r\n                <el-form-item class=\"btns\">\r\n                    <el-button type=\"primary\" @click=\"validateRegisterForm\">注册</el-button>\r\n                    <el-button @click=\"resetRegisterForm\">重置</el-button>\r\n                </el-form-item>\r\n            </el-form>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<style>\r\n.register_container{\r\n    background-color: #EAEDF1;\r\n    height:100%;\r\n}\r\n.register_box{\r\n    width: 400px;\r\n    height: 400px;\r\n    background-color: #fff;\r\n    border-radius: 3px;\r\n    box-shadow: 0px 5px 20px #999;\r\n    position: absolute;\r\n    left: 50%;\r\n    top: 50%;\r\n    transform: translate(-50%, -50%);\r\n}\r\n.register_title{\r\n    position: absolute;\r\n    left: 50%;\r\n    top:20%;\r\n    transform: translate(-50%,-50%);\r\n    text-align: center;\r\n    color: #333;\r\n    text-shadow: 2px 2px #ddd;\r\n    font-size: 36px;\r\n    font-weight: bold;\r\n}\r\n.btns{\r\n    display:flex;\r\n    justify-content: flex-end;\r\n}\r\n.register_form{\r\n    position: absolute;\r\n    bottom: 0;\r\n    width: 100%;\r\n    padding: 0 80px;\r\n    box-sizing: border-box;\r\n}\r\n</style>\r\n<script>\r\nimport axios from \"axios\";\r\nimport {Message} from \"element-ui\";\r\n\r\nexport default {\r\n    data() {\r\n        return {\r\n            registerForm: {\r\n                name: '',\r\n                key1: '',\r\n                key2: '',\r\n                type:'system'\r\n            },\r\n            options: [{\r\n                value: 'system',\r\n                label: '系统管理员'\r\n            }, {\r\n                value: 'book',\r\n                label: '在线预定管理员'\r\n            }, {\r\n                value: 'check',\r\n                label: '审核员'\r\n            },],\r\n            value: '系统管理员'\r\n        }\r\n\r\n    },\r\n\r\n    methods: {\r\n        validateRegisterForm() {\r\n            if (!this.registerForm.name || !this.registerForm.key1 || !this.registerForm.key2) {\r\n                this.$message.error('请输入完整注册信息！');\r\n                return;\r\n            }\r\n            if (this.registerForm.key1 !== this.registerForm.key2) {\r\n                this.$message.error('两次输入的密码不一致，请重新输入！');\r\n                return;\r\n            }\r\n\r\n\r\n            axios.defaults.baseURL='http://localhost:80'\r\n            axios.post('/admin/register',{\r\n\r\n                    \"name\":this.registerForm.name,\r\n                    \"key1\":this.registerForm.key1,\r\n                    \"key2\":this.registerForm.key2,\r\n                    \"type\":this.registerForm.type,\r\n                },\r\n                {\r\n                    headers:{\r\n                        'Access-Control-Allow-Origin':'*', //解决cors头问题\r\n                        'Access-Control-Allow-Credentials':'true', //解决session问题\r\n                        // 'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8', //将表单数据传递转化为form-data类型\r\n                        //  'token': '131231',\r\n                    }\r\n                }).then(response=>{\r\n\r\n                //console.log('/login',response.data)\r\n                //const {code,msg,data}=response;\r\n\r\n\r\n                if(String(response.data.code)===\"1\"){\r\n                    //console.log(\"123\");\r\n\r\n                    //this.$message.success(\"963963\");\r\n                    //Message.success(response.data.msg);\r\n\r\n                    this.$message.success(response.data.msg);\r\n                    this.$refs.registerFormRef.resetFields();\r\n                }\r\n                else\r\n                {\r\n                    // Message.error(msg);\r\n                    this.$message.error(response.data.msg);\r\n                }\r\n            },error=>{\r\n                console.log('错误',error.message)\r\n            })\r\n\r\n\r\n\r\n\r\n            //const {name, key1,type} = this.registerForm;\r\n\r\n        },\r\n        resetRegisterForm() {\r\n            this.$refs.registerFormRef.resetFields();\r\n        }\r\n    }\r\n}\r\n</script>"],"mappings":"AA+FA,OAAAA,KAAA;AACA,SAAAC,OAAA;AAEA;EACAC,KAAA;IACA;MACAC,YAAA;QACAC,IAAA;QACAC,IAAA;QACAC,IAAA;QACAC,IAAA;MACA;MACAC,OAAA;QACAC,KAAA;QACAC,KAAA;MACA;QACAD,KAAA;QACAC,KAAA;MACA;QACAD,KAAA;QACAC,KAAA;MACA;MACAD,KAAA;IACA;EAEA;EAEAE,OAAA;IACAC,qBAAA;MACA,UAAAT,YAAA,CAAAC,IAAA,UAAAD,YAAA,CAAAE,IAAA,UAAAF,YAAA,CAAAG,IAAA;QACA,KAAAO,QAAA,CAAAC,KAAA;QACA;MACA;MACA,SAAAX,YAAA,CAAAE,IAAA,UAAAF,YAAA,CAAAG,IAAA;QACA,KAAAO,QAAA,CAAAC,KAAA;QACA;MACA;MAGAd,KAAA,CAAAe,QAAA,CAAAC,OAAA;MACAhB,KAAA,CAAAiB,IAAA;QAEA,aAAAd,YAAA,CAAAC,IAAA;QACA,aAAAD,YAAA,CAAAE,IAAA;QACA,aAAAF,YAAA,CAAAG,IAAA;QACA,aAAAH,YAAA,CAAAI;MACA,GACA;QACAW,OAAA;UACA;UAAA;UACA;UACA;UACA;QACA;MACA,GAAAC,IAAA,CAAAC,QAAA;QAEA;QACA;;QAGA,IAAAC,MAAA,CAAAD,QAAA,CAAAlB,IAAA,CAAAoB,IAAA;UACA;;UAEA;UACA;;UAEA,KAAAT,QAAA,CAAAU,OAAA,CAAAH,QAAA,CAAAlB,IAAA,CAAAsB,GAAA;UACA,KAAAC,KAAA,CAAAC,eAAA,CAAAC,WAAA;QACA,OAEA;UACA;UACA,KAAAd,QAAA,CAAAC,KAAA,CAAAM,QAAA,CAAAlB,IAAA,CAAAsB,GAAA;QACA;MACA,GAAAV,KAAA;QACAc,OAAA,CAAAC,GAAA,OAAAf,KAAA,CAAAgB,OAAA;MACA;;MAKA;IAEA;;IACAC,kBAAA;MACA,KAAAN,KAAA,CAAAC,eAAA,CAAAC,WAAA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}